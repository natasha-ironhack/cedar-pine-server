{"version":3,"sources":["services/auth-service.js","components/NavBar.jsx","components/SignUp.jsx","components/Login.jsx","components/Candles.jsx","components/CandleDetails.jsx","components/CandleEdit.jsx","components/Private.jsx","components/AddForm.jsx","components/Cart.jsx","components/Checkout.jsx","components/Confirmation.jsx","App.js","reportWebVitals.js","index.js"],"names":["authService","signup","firstName","lastName","email","password","service","post","login","logout","loggedin","get","withCredentials","this","axios","create","baseURL","process","Navbar","anyCart","isLoggedIn","user","setUser","cart","to","onClick","then","Object","keys","length","reduce","total","item","quantity","IconButton","type","color","Signup","state","handleChange","target","name","value","setState","handleSubmit","event","preventDefault","response","props","data","onSubmit","placeholder","onChange","variant","Component","Login","Candles","listOfCandles","isLoading","catch","err","history","push","isOwner","addToCart","map","oneCandle","_id","image","price","CandleDetails","singleCandle","handleDelete","delete","match","params","id","weight","description","CandleEdit","patch","REACT_APP_SERVER_API","htmlFor","Private","privateData","console","log","status","message","AddForm","Cart","decreaseFromCart","product","Checkout","Box","component","sx","m","width","noValidate","autoComplete","TextField","required","label","Confirmation","App","checkout","productInfo","goToCheckout","loggedInStatus","getUser","error","NavBar","setCheckout","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b318110.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    //goes to backend auth route\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_HOST}/auth`,\n      withCredentials: true,\n    });\n  }\n\n  signup = (firstName, lastName, email, password) => {\n    //this.service is axios\n    //just need to do /signup since we alr. have basURL above\n    //goes to backend auth route signup route, and passes\n    //the info to it\n    return this.service.post(\"/signup\", {\n      firstName,\n      lastName,\n      email,\n      password,\n    });\n  };\n\n  login = (email, password) => {\n    return this.service.post(\"/login\", { email, password });\n  };\n\n  logout = () => {\n    return this.service.post(\"/logout\");\n  };\n\n  loggedin = () => {\n    return this.service.get(\"/loggedin\", { withCredentials: true });\n  };\n}\n\nconst authService = new AuthService();\nexport default authService;\n\n//idea is we don't want to repeat axios post and with credentials all\n//the time. so doing service with has methods and promises.\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport authService from \"../services/auth-service\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\n\n//passing props on line 6\nconst Navbar = ({ isLoggedIn, user, setUser, cart }) => {\n  const logoutUser = () => {\n    authService.logout().then(() => {\n      setUser(null, false);\n    });\n  };\n\n  const calculateCartItems = (anyCart) => {\n    return Object.keys(anyCart).length === 0\n      ? 0\n      : Object.keys(anyCart).reduce(\n          (total, item) => total + anyCart[item].quantity,\n          0\n        );\n  };\n\n  return (\n    <ul>\n      {/* //if user is logged in, want to show user and these list items */}\n      {isLoggedIn && user && (\n        <>\n          <li>\n            <NavLink to=\"/candles/all\">Cedar & Pine</NavLink>\n          </li>\n          {/* <li>{user.firstName}</li> */}\n          <li>\n            <NavLink to=\"/private\">{user.firstName}'s Account</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/\">\n              <button onClick={() => logoutUser()}>Logout</button>\n            </NavLink>\n          </li>\n          <li></li>\n        </>\n      )}\n      {/* //if user isn't logged in, we show these list items */}\n      {!isLoggedIn && (\n        <>\n          <li>\n            <NavLink to=\"/signup\">Sign Up</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/login\">Login</NavLink>\n          </li>\n        </>\n      )}\n      <NavLink to=\"/cart\">Cart {calculateCartItems(cart)}</NavLink>\n      <IconButton type=\"submit\" color=\"success\">\n        <AddShoppingCartIcon></AddShoppingCartIcon>\n      </IconButton>\n    </ul>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport authService from \"../services/auth-service\";\n\nexport default class Signup extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  //we're targeting the name key and wanting to replace it with\n  //whatever value we assign it\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { firstName, lastName, email, password } = this.state;\n\n    //goes to services/auth-service folder, (goes to backend)\n    //then to it's sign up method, and passes the info\n    authService\n      .signup(firstName, lastName, email, password)\n      .then((response) => {\n        // console.log(response);\n        //(will make our state empty and re-set the form?)\n        this.setState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\" });\n        this.props.setUser(response.data, true);\n        //this.props.setUser comes from App.js\n        //a method that takes two arguments\n        //lifting up the state\n        //b/c changing state of mother component (App.js) inside this component\n        //(((when u get response of signup, saying we want to use that response and put\n        //it on app.js, the mother component. and want to put that info on that state\n        //b/c then all my comps might know about the user?)))\n      });\n  };\n  //other method for authService.signup:\n  // axios.post(\n  //   `{process.env.REACT_APP_API_HOST}/auth/signup`,\n  //   {\n  //     firstName,\n  //     lastName,\n  //     email,\n  //     password,\n  //   },\n  //   { withCredentials: true }\n  // );\n  //will go to backend auth route and find /signup and pass on\n  //the info (name, email, etc.)\n\n  render() {\n    const { firstName, lastName, email, password } = this.state;\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder=\"First Name\"\n            type=\"text\"\n            name=\"firstName\"\n            value={firstName}\n            onChange={this.handleChange}\n          />\n          <input\n            placeholder=\"Last Name\"\n            type=\"text\"\n            name=\"lastName\"\n            value={lastName}\n            onChange={this.handleChange}\n          />\n          <input\n            placeholder=\"Email\"\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n          <input\n            placeholder=\"Password\"\n            type=\"text\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\" variant=\"contained\">\n            Create an Account\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\n//when are we handling all that data and sending it to the back\n//end, right? b/c we need to gather it and do the signup\n//just request \"bey backed, u have the data now, please sign up\n//this guy to our db\"\n","import React, { Component } from \"react\";\nimport authService from \"../services/auth-service\";\n\nexport default class Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n\n    //goes to services folder and to the login method\n    //goes to back end's login route\n    authService.login(email, password).then((response) => {\n      this.setState({ email: \"\", password: \"\" });\n      //sets the user on the main path\n      this.props.setUser(response.data, true);\n    });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input placeholder=\"Email\"\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n          <input placeholder=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    );\n  }\n}\n","//class component b/c getting info from backend and adding it to display,\n//, so might need to use a state\n//when in doubt use a class component\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n// import Cart from \"./Cart\";\n\n//in front end don't have access to this. backend person does.\nexport default class Candles extends Component {\n  state = {\n    listOfCandles: null,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    //console.log(process.env.REACT_APP_SERVER_API);\n    axios\n      .get(`${process.env.REACT_APP_API_HOST}/candles/all`)\n      .then((response) => {\n        this.setState({ listOfCandles: response.data, isLoading: false });\n      })\n      .catch((err) => {\n        this.props.history.push(\"/500\");\n      });\n  }\n\n  render() {\n    const { isLoading, listOfCandles } = this.state;\n    const { isOwner, addToCart } = this.props;\n\n    return (\n      <div>\n        <h2>CANDLES</h2>\n\n        {isLoading && <h1>...isLoading</h1>}\n        {isOwner && (\n          <Link to={`/candles/create`}>\n            <button>CREATE</button>\n          </Link>\n        )}\n\n        {!isLoading &&\n          listOfCandles.map((oneCandle) => {\n            return (\n              <div key={oneCandle._id}>\n                <Link to={`/candles/${oneCandle._id}/details`}>\n                  <ul>\n                    {/* <li> */}\n                    {oneCandle.image}\n                    {/* <img src={this.props.picture} /> */}\n                    {/* </li> */}\n                    <li>{oneCandle.name}</li>\n                    <li>{oneCandle.price}</li>\n                  </ul>\n                </Link>\n                <button onClick={() => addToCart(oneCandle, 1)}>\n                  {/* Maybe need to transfer 1 or oneCandle to state in cart, then when updating with \n                  this.setState for the button, it'll change the state in cart.jsx from oneCandle: 1 to\n                  2 or 3 or 10 */}\n                  {/* want to make it so when clicked, adds to the quantity button on the \n                cart page, instead of adding multiple listings of the same candle */}\n                  Add to Cart\n                </button>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass CandleDetails extends Component {\n  state = {\n    singleCandle: null,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        `${process.env.REACT_APP_API_HOST}/candles/${this.props.match.params.id}`\n      )\n      .then((response) => {\n        this.setState({ singleCandle: response.data, isLoading: false });\n      })\n      .catch((err) => {\n        this.props.history.push(\"/500\");\n      });\n  }\n\n  handleDelete = () => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_HOST}/candles/${this.props.match.params.id}`, {withCredentials: true}\n      )\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n      .catch(() => {\n        this.props.history.push(\"/500\");\n      });\n  };\n\n  render() {\n    const { isLoading, singleCandle } = this.state;\n    const { isOwner, addToCart } = this.props;\n\n    return (\n      <div>\n        <h2>Candle Details</h2>\n        {isLoading && <h1>...Loading</h1>}\n\n        {!isLoading && (\n          <div>\n            <h4>{singleCandle.image} </h4>\n            <p>{singleCandle.name} </p>\n            <p>{singleCandle.price}</p>\n            <p>{singleCandle.weight}</p>\n            <p>{singleCandle.quantity}</p>\n            <p>{singleCandle.description}</p>\n\n            <button onClick={() => addToCart(singleCandle, 1)}>\n              ADD TO CART\n            </button>\n\n            {/* <button onClick={this.handleDelete}>DELETE</button>\n            <Link to={`/candles/${singleCandle._id}/edit`}>\n              <button>EDIT</button>\n            </Link> */}\n            {/* both button links are the same, just diff. ways of \n            doin it */}\n            {isOwner && (\n              <div>\n                <button onClick={this.handleDelete}>DELETE</button>\n                <Link to={`/candles/${singleCandle._id}/edit`}>\n                  <button>EDIT</button>\n                </Link>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CandleDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class CandleEdit extends Component {\n  state = {\n    image: \"\",\n    name: \"\",\n    price: \"\",\n    weight: \"\",\n    quantity: \"\",\n    description: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { image, name, price, weight, quantity, description } = this.state;\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_HOST}/candles/${this.props.match.params.id}`,\n        {\n          image,\n          name,\n          price,\n          weight,\n          quantity,\n          description,\n        }\n      )\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n      .catch(() => {\n        this.props.history.push(\"/500\");\n      });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        `${process.env.REACT_APP_SERVER_API}/candles/${this.props.match.params.id}`\n      )\n      .then((response) => {\n        this.setState({\n          image: response.data.image,\n          name: response.data.name,\n          price: response.data.price,\n          weight: response.data.weight,\n          quantity: response.data.quantity,\n          description: response.data.description,\n        });\n      })\n      .catch((err) => {});\n  }\n\n  render() {\n    const { image, name, price, weight, quantity, description } = this.state;\n\n    return (\n      <div>\n        <h2>Candle Edit</h2>\n\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"image\">Image</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"image\"\n            value={image}\n          />\n          <br />\n          <label htmlFor=\"name\">Name</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n          />\n          <br />\n          <label htmlFor=\"price\">Price</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"price\"\n            value={price}\n          />\n          <br />\n          <label htmlFor=\"weight\">Weight</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"weight\"\n            value={weight}\n          />\n          <br />\n          <label htmlFor=\"quantity\">Quantity</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"quantity\"\n            value={quantity}\n          />\n          <br />\n          <label htmlFor=\"description\">Description</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"description\"\n            value={description}\n          />\n          <br />\n          <button type=\"submit\">Edit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CandleEdit;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\n\nclass Private extends Component {\n  state = {\n    privateData: null,\n    isLoading: true,\n    user: true,\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_API_HOST}/private`, {\n        withCredentials: true,\n      }) // credentials will allow the backend to access the session on this request. Important when authorizing.\n      .then((response) => {\n        this.setState({ privateData: response.data, isLoading: false });\n      })\n      .catch((err) => {\n        console.log(err.response.status); // => the error message status code\n        if (err.response.status === 403) {\n          this.props.history.push(\"/login\");\n        }\n      });\n  }\n\n  render() {\n    const { privateData, isLoading, user } = this.state;\n\n    // authorization in the Frontend. Optional if you have backend authorization.\n    // Redirect is like a Link but automatically clicked when read\n    if (!this.props.isLoggedIn) return <Redirect to=\"/login\" />;\n\n    return (\n      <div>\n        {isLoading && <h1>...isLoading</h1>}\n        {!isLoading && <h4>Welcome Back {user.firstName}</h4> && (\n          <h3>{privateData.message}</h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Private;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class AddForm extends Component {\n  state = {\n    image: \"\",\n    name: \"\",\n    price: \"\",\n    weight: \"\",\n    quantity: \"\",\n    description: \"\",\n    // user: true,\n    // isOwner: true,\n  };\n  //method we'll use every time we have onChange , that the value\n  //is coming from state, and that the name matches\n  //updating what we want to change with the new value entered.\n  //the event target's name. what is the target of the event (button, etc.)?\n  //the name\n  //whenever we sent an event listener, the target will be the whole\n  //dom element that will actually triggering that event if button and\n  // click, the target will be whole button dom element. internally you\n  //can navigate through attributes\n  //when working with input field, .name is a property\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { image, name, price, weight, quantity, description } = this.state;\n    axios\n      .post(\n        `${process.env.REACT_APP_API_HOST}/candles/create`,\n        {\n          image,\n          name,\n          price,\n          weight,\n          quantity,\n          description,\n        },\n        {\n          withCredentials: true,\n        }\n      )\n      .then((data) => {\n        this.props.history.push(\"/\");\n      })\n      .catch((err) => {\n        this.props.history.push(\"/500\");\n      });\n  };\n\n  render() {\n    const { image, name, price, weight, quantity, description } =\n      this.state;\n\n    return (\n      <div>\n        \n          <div>\n            <h2>CREATE A CANDLE</h2>\n            <form onSubmit={this.handleSubmit}>\n              <label htmlFor=\"image\">Image</label>\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"image\"\n                value={image}\n              />\n              <br />\n              <label htmlFor=\"name\">Name</label>\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"name\"\n                value={name}\n              />\n              <br />\n              <label htmlFor=\"price\">Price</label>\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"price\"\n                value={price}\n              />\n              <br />\n              <label htmlFor=\"weight\">Weight</label>\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"weight\"\n                value={weight}\n              />\n              <br />\n              <label htmlFor=\"quantity\">Quantity</label>\n              <input\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"quantity\"\n                value={quantity}\n              />\n              <br />\n              <label htmlFor=\"description\">Description</label>\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"description\"\n                value={description}\n              />\n              <br />\n              <button type=\"submit\">Add</button>\n            </form>\n          </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default AddForm;\n","import React, { Component } from \"react\";\n// import axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n// import Table from \"@mui/material/Table\";\n// import TableBody from \"@mui/material/TableBody\";\n// import TableCell from \"@mui/material/TableCell\";\n// import TableContainer from \"@mui/material/TableContainer\";\n// import TableHead from \"@mui/material/TableHead\";\n// import TableRow from \"@mui/material/TableRow\";\n// import Paper from \"@mui/material/Paper\";\n// import Candles from \"./components/Candles\";\n\n//in front end don't have access to this. backend person does.\nexport default class Cart extends Component {\n  state = {\n    // quantity: null,\n    oneCandle: 1,\n  };\n\n  // changeNumber = (btn) => {\n  //   console.log(\"it has been clicked\");\n  //   this.setState({\n  //     quantity:\n  //       btn === \"increase\"\n  //         ? this.state.oneCandle + 1\n  //         : this.state.oneCandle - 1,\n  //   });\n  // };\n\n  render() {\n    const { isLoading } = this.state;\n    const { cart, addToCart, decreaseFromCart } = this.props;\n\n    // const invoiceSubtotal = this.subtotal(rows);\n    // const TAX_RATE = 0.07;\n\n    // const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n    // const invoiceTotal = invoiceTaxes + invoiceSubtotal;\n\n    return (\n      <div>\n        <h2>My Cart</h2>\n\n        {isLoading && <h1>...isLoading</h1>}\n        {Object.keys(cart).length === 0 && (\n          <div>\n            You have no products in your cart. You can browse our collection of\n            candles\n            <Link to={`/candles/all`}>here</Link>.\n          </div>\n        )}\n        {!isLoading &&\n          Object.keys(cart).map((item) => {\n            const { product, quantity } = cart[item];\n            console.log(quantity, \"this is quantity\");\n            return (\n              <div key={product._id}>\n                {/* do we need several LINK to show the number of candles chosen by the clien??? */}\n                <Link to={`/candles/${product._id}/details`}>\n                  Name: {product.name}\n                </Link>\n                Price: {product.price}\n                <button onClick={() => addToCart(product, 1)}>+</button>\n                Quantity: {quantity}\n                <button onClick={() => decreaseFromCart(product, 1)}>-</button>\n                {/* <button onClick={() => addToCart(product, -1)}>\n                  Remove From Cart\n                </button> */}\n              </div>\n            );\n          })}\n        <Link to=\"/checkout\">Continue to Checkout</Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\n\n//in front end don't have access to this. backend person does.\nexport default class Checkout extends Component {\n  state = {};\n\n  render() {\n    // const { isLoading } = this.state;\n    // const { cart, goToCheckout } = this.props;\n\n    return (\n      <div>\n        <h2>CHECKOUT</h2>\n\n        <Box\n          component=\"form\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <h4>BILLING INFORMATION</h4>\n          <div>\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"First Name\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Last Name\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Country\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Street and House Number\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Postal Code\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"City\"\n              // defaultValue=\"type here\"\n            />{\" \"}\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Email Address\"\n              // defaultValue=\"type here\"\n            />\n          </div>\n          <div>\n            <h4>DELIVERY ADDRESS</h4>\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"First Name\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Last Name\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Country\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Street and House Number\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Postal Code\"\n              // defaultValue=\"type here\"\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"City\"\n              // defaultValue=\"type here\"\n            />{\" \"}\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Email Address\"\n              // defaultValue=\"type here\"\n            />\n          </div>\n          <div>\n            <h4>METHOD OF PAYMENT</h4>\n          </div>\n        </Box>\n        <Link to=\"/confirmation\">Place an Order</Link>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nfunction Confirmation() {\n  return (\n    <div>\n      <h3>\n        Your purchase was successful! Please check your inbox for the\n        confirmation email.\n        ORDER NUMBER: #random number\n      </h3>\n    </div>\n  );\n}\n\nexport default Confirmation;\n","import { Component } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport authService from \"./services/auth-service\";\nimport Candles from \"./components/Candles\";\nimport CandleDetails from \"./components/CandleDetails\";\nimport CandleEdit from \"./components/CandleEdit\";\nimport Private from \"./components/Private\";\nimport AddForm from \"./components/AddForm\";\nimport Cart from \"./components/Cart\";\nimport Checkout from \"./components/Checkout\";\nimport Confirmation from \"./components/Confirmation\";\n// import Footer from \"./components/Footer\";\n\n// import \"@coreui/coreui/dist/css/coreui.min.css\";\n//import 'bootstrap/dist/css/bootstrap.min.css'\n\n//isLoggedIn is here b/c app.js is the mother component, so\n//the other components can know if the user is logged in\n//isLoggedIn is a boolean\nclass App extends Component {\n  //Lifting the state up\n  state = {\n    isLoggedIn: null,\n    user: null,\n    cart: {},\n    isOwner: null,\n    checkout: [],\n    //need to check if user is able to edit or see page\n    //so need to store user\n  };\n\n  // ---> CART STUF\n  decreaseFromCart = (product, quantity) => {\n    if (this.state.cart[product._id]) {\n      const productInfo = this.state.cart[product._id];\n      this.setState({\n        cart: {\n          ...this.state.cart,\n          [product._id]: {\n            ...productInfo,\n            quantity: productInfo.quantity - quantity,\n          },\n        },\n      });\n    } else {\n      this.setState({\n        cart: { ...this.state.cart, [product._id]: { product, quantity } },\n      });\n    }\n  };\n\n  addToCart = (product, quantity) => {\n    // const isProductInsideCart = this.state.cart.some(\n    //   (item) => item.product._id === product._id\n    // );\n    if (this.state.cart[product._id]) {\n      console.log(\"is alreday inside\");\n      const productInfo = this.state.cart[product._id];\n      this.setState({\n        cart: {\n          ...this.state.cart,\n          [product._id]: {\n            ...productInfo,\n            quantity: productInfo.quantity + quantity,\n          },\n        },\n      });\n    } else {\n      this.setState({\n        cart: { ...this.state.cart, [product._id]: { product, quantity } },\n      });\n    }\n  };\n\n  goToCheckout = (product, quantity) => {\n    this.setState({\n      checkout: [...this.state.checkout, { product, quantity }],\n    });\n  };\n\n  //method for lifting state up\n  //setting the user to something\n  //receiving a user and boolean (loggedInStatus)\n  setUser = (user, loggedInStatus) => {\n    this.setState({\n      user,\n      isLoggedIn: loggedInStatus,\n      isOwner: (user && user.isOwner) || false,\n    });\n  };\n  //pass setUser to component below with\n  //to pass props to a route: with a render prop: render={} etc\n\n  //below: another method which will check if we have a user in the session\n  //we do? then it will put it in the state\n  getUser = () => {\n    if (this.state.user === null) {\n      //if user = null, want to get the user in the session, or at least try\n      authService\n        //authService.loggedin goes to back end's loggedin route\n        .loggedin()\n        .then((response) => {\n          this.setUser(response.data.user, true);\n        })\n        .catch((error) => {\n          this.setState({\n            isLoggedIn: false,\n          });\n        });\n    }\n  };\n\n  //when app mounts, want to check if we have a user logged in in the session\n  componentDidMount() {\n    this.getUser();\n  }\n\n  render() {\n    const { user, isLoggedIn, isOwner, cart, goToCheckout } = this.state;\n    return (\n      <div>\n        {/* passing user to the navBar with user={user} */}\n        <NavBar\n          isLoggedIn={isLoggedIn}\n          user={user}\n          isOwner={isOwner}\n          setUser={this.setUser}\n          cart={cart}\n          setCheckout={this.setCheckout}\n          // goToCheckout={this.goToCheckout}\n        />\n\n        <Switch>\n          <Route\n            exact\n            path=\"/signup\"\n            render={(props) => <SignUp {...props} setUser={this.setUser} />}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) => <Login {...props} setUser={this.setUser} />}\n            //setUser is a normal prop, and with this.setUser, we are\n            //passing the function of the parent\n            //since it's a prop, it'll be available on signup component page\n          />\n          <Route\n            exact\n            path=\"/private\"\n            render={(props) => <Private {...props} isLoggedIn={isLoggedIn} />}\n          />\n\n          <Route\n            exact\n            path=\"/candles/all\"\n            render={(props) => (\n              <Candles\n                {...props}\n                isLoggedIn={isLoggedIn}\n                isOwner={isOwner}\n                addToCart={this.addToCart}\n                goToCheckout={this.goToCheckout}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/candles/create\"\n            render={(props) => (\n              <AddForm {...props} isLoggedIn={isLoggedIn} isOwner={isOwner} />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/candles/:id/details\"\n            render={(props) => (\n              <CandleDetails\n                {...props}\n                addToCart={this.addToCart}\n                isLoggedIn={isLoggedIn}\n                isOwner={isOwner}\n              />\n            )}\n          />\n\n          {/* <Route exact path=\"/candles/:id/edit\" component={CandleEdit} /> */}\n\n          <Route\n            exact\n            path=\"/candles/:id/edit\"\n            render={(props) => (\n              <CandleEdit\n                {...props}\n                isLoggedIn={isLoggedIn}\n                isOwner={isOwner}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/cart\"\n            render={(props) => (\n              <Cart {...props} addToCart={this.addToCart} cart={cart} />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/checkout\"\n            render={(props) => (\n              <Checkout {...props} goToCheckout={goToCheckout} />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/confirmation\"\n            render={(props) => <Confirmation {...props} />}\n          />\n        </Switch>\n\n        {/* <Footer /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\n// import \"bootstrap-css-only/css/bootstrap.min.css\";\n// import \"mdbreact/dist/css/mdb.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n//browser router lets us use links and stuff\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}